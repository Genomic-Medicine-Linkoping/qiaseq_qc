__author__ = "ljmesi"
__copyright__ = "Copyright 2022, ljmesi"
__email__ = "lauri.mesilaakso@regionostergotland.se"
__license__ = "GPL-3"

include: "rules/common.smk"

report: "report/workflow.rst"


rule copy_results_files:
    input:
        input_files,
    output:
        output_files,
    resources:
        threads=config.get("copy_results_files", {}).get("threads", config["default_resources"]["threads"]),
        time=config.get("copy_results_files", {}).get("time", config["default_resources"]["time"]),
        mem_mb=config.get("copy_results_files", {}).get("mem_mb", config["default_resources"]["mem_mb"]),
        mem_per_cpu=config.get("copy_results_files", {}).get("mem_per_cpu", config["default_resources"]["mem_per_cpu"]),
        partition=config.get("copy_results_files", {}).get("partition", config["default_resources"]["partition"]),
    run:
        import subprocess
        i = 0
        for file in input:
            subprocess.run(["cp", file, output[i]])
            i += 1


rule all:
    input:
        unpack(compile_output_list),

module prealignment:
    snakefile:
        "/home/lauri/Desktop/hydra-genetics_prealignment/workflow/Snakefile"
    config:
        config

use rule * from prealignment as prealignment_*


module alignment:
    snakefile:
        github("hydra-genetics/alignment", path="workflow/Snakefile", tag="v0.1.0")
    config:
        config

use rule * from alignment as alignment_*


module qc:
    snakefile:
        "/home/lauri/Desktop/hydra-genetics_qc/workflow/Snakefile"
    config:
        config

use rule * from qc as qc_*

module snv_indels:
    snakefile:
            "/home/lauri/Desktop/hydra-genetics_snv_indels/workflow/Snakefile"
    config:
        config

use rule * from snv_indels as snv_indels_*
